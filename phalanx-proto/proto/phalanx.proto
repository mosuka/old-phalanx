syntax = "proto3";

package phalanx;

option go_package = "pkg/proto";

enum State {
    DISCONNECTED = 0;
    NOT_READY = 1;
    READY = 2;
}

enum Role {
    CANDIDATE = 0;
    REPLICA = 1;
    PRIMARY = 2;
}

message NodeDetails {
    string address = 1;
    State state = 2;
    Role role = 3;
}

message ReadinessReq {}

message ReadinessReply {
    State state = 1;
}

service OverseerService {
    rpc Readiness (ReadinessReq) returns (ReadinessReply) {}
    rpc Watch (WatchReq) returns (WatchReply) {}
    rpc Unwatch (UnwatchReq) returns (UnwatchReply) {}
    rpc Register (RegisterReq) returns (RegisterReply) {}
    rpc Unregister (UnregisterReq) returns (UnregisterReply) {}
    rpc Inquire (InquireReq) returns (InquireReply) {}
}

message RegisterReq {
    string index_name = 1;
    string shard_name = 2;
    string node_name = 3;
    NodeDetails node_details = 4;
}

message RegisterReply {}

message UnregisterReq {
    string index_name = 1;
    string shard_name = 2;
    string node_name = 3;
}

message UnregisterReply {}

message InquireReq {
    string index_name = 1;
    string shard_name = 2;
    string node_name = 3;
}

message InquireReply {
    NodeDetails node_details = 1;
}

message WatchReq {
    uint64 interval = 1;
}

message WatchReply {}

message UnwatchReq {}

message UnwatchReply {}

service IndexService {
    rpc Readiness (ReadinessReq) returns (ReadinessReply) {}
    rpc Watch (WatchReq) returns (WatchReply) {}
    rpc Unwatch (UnwatchReq) returns (UnwatchReply) {}
    rpc Get(GetReq) returns (GetReply) {}
    rpc Set(SetReq) returns (SetReply) {}
    rpc Delete(DeleteReq) returns (DeleteReply) {}
    rpc BulkSet (BulkSetReq) returns (BulkSetReply) {}
    rpc BulkDelete (BulkDeleteReq) returns (BulkDeleteReply) {}
    rpc Commit (CommitReq) returns (CommitReply) {}
    rpc Rollback (RollbackReq) returns (RollbackReply) {}
    rpc Merge (MergeReq) returns (MergeReply) {}
    rpc Schema (SchemaReq) returns (SchemaReply) {}
    rpc Search (SearchReq) returns (SearchReply) {}
}

message GetReq {
    string id = 1;
}

message GetReply {
    bytes doc = 1;
}

message SetReq {
    bytes doc = 1;
}

message SetReply {}

message DeleteReq {
    string id = 1;
}

message DeleteReply {}

message BulkSetReq {
    repeated bytes docs = 1;
}

message BulkSetReply {}

message BulkDeleteReq {
    repeated string ids = 1;
}

message BulkDeleteReply {}

message CommitReq {}

message CommitReply {}

message RollbackReq {}

message RollbackReply {}

message MergeReq {}

message MergeReply {}

message SchemaReq {}

message SchemaReply {
    bytes schema = 1;
}

message SearchReq {
    bytes request = 1;
}

message SearchReply {
    bytes result = 1;
}
